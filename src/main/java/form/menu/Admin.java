/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author aula9
 */
package form.menu;

import javax.swing.JOptionPane;
import form.menu.Login;


//IMPORTACIONES DE ROLES
import form.roles.application.CreateRolesUseCase;
import form.roles.domain.service.RolesService;
import form.roles.infrastructure.in.RolesController;
import form.roles.infrastructure.out.RolesRepository;

//IMPORTACIONES DE CATEGORIA
import form.category.application.CreateCategoryUseCase;
import form.category.infrastructure.in.CategoryController;
import form.category.infrastructure.out.CategoryRepository;
import form.category.domain.service.CategoryService;

//IMPORTACIONES DE USER ROLL
import form.userrol.application.CreateUserRolUseCase;
import form.userrol.domain.service.UserRolService;
import form.userrol.infrastructure.in.UserRolController;
import form.userrol.infrastructure.out.UserRolRepository;

//IMPORTACIONES DE USUARIOS
import form.user.application.CreateUserUseCase;
import form.user.domain.service.UserService;
import form.user.infrastructure.in.UserController;
import form.user.infrastructure.out.UserRepository;

//IMPORTACIONES SURVEYS
import form.surveys.application.CreateSurveysUseCase;
import form.surveys.infrastructure.out.SurveysRepository;
import form.surveys.infrastructure.out.in.SurveysController;

// import de question
import form.questions.application.CreateQuestionUseCase;
import form.questions.domain.service.QuestionService;
import form.questions.infrastructure.in.QuestionController;
import form.questions.infrastructure.out.QuestionRespository;

//import chapter
import form.chapter.application.CreateChapterUseCase;
import form.chapter.domain.service.ChapterService;
import form.chapter.infrastructure.in.ChapterController;
import form.chapter.infrastructure.out.ChapterRepository;

//import respuestas preguntas
import form.responseoptions.application.CreateResOptionUseCase;
import form.responseoptions.domain.service.ResOptionService;
import form.responseoptions.infrastructure.in.ResOptionController;
import form.responseoptions.infrastructure.out.ResOptionRepository;

//import subrespuestaopciones
import form.subresponse_options.application.CreateSubResOpUseCase;
import form.subresponse_options.domain.service.SubResOpService;
import form.subresponse_options.infrastructure.out.SubResOpRepository;
import form.subresponse_options.infrastructure.in.SubResOpController;


// import responsequestion
import form.response_question.application.CreateRespondeQuestionUseCase;
import form.response_question.domain.service.RespondeQuestionService;
import form.response_question.infrastructure.in.RespondeQuestionController;
import form.response_question.infrastructure.out.RespondeQuestionRepository;


public class Admin extends javax.swing.JFrame {

    /**
     * Creates new form Admin
     */
    public Admin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        roles = new javax.swing.JButton();
        users = new javax.swing.JButton();
        category_catalog = new javax.swing.JButton();
        surveys = new javax.swing.JButton();
        user_roles = new javax.swing.JButton();
        chapter = new javax.swing.JButton();
        questions = new javax.swing.JButton();
        response_options = new javax.swing.JButton();
        subresponse_options = new javax.swing.JButton();
        response_question = new javax.swing.JButton();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("ADMIN MENU");

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel1.setText("Selecciona una opcion:");

        roles.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        roles.setText("Roles");
        roles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rolesActionPerformed(evt);
            }
        });

        users.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        users.setText("Users");
        users.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usersActionPerformed(evt);
            }
        });

        category_catalog.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        category_catalog.setText("Category Catalog");
        category_catalog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                category_catalogActionPerformed(evt);
            }
        });

        surveys.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        surveys.setText("Surveys");
        surveys.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                surveysActionPerformed(evt);
            }
        });

        user_roles.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        user_roles.setText("User Roles");
        user_roles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_rolesActionPerformed(evt);
            }
        });

        chapter.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        chapter.setText("Chapter");
        chapter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chapterActionPerformed(evt);
            }
        });

        questions.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        questions.setText("Questions");
        questions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                questionsActionPerformed(evt);
            }
        });

        response_options.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        response_options.setText("Response Options");
        response_options.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                response_optionsActionPerformed(evt);
            }
        });

        subresponse_options.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        subresponse_options.setText("Subresponse Options");
        subresponse_options.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subresponse_optionsActionPerformed(evt);
            }
        });

        response_question.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        response_question.setText("Response Questions");
        response_question.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                response_questionActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(255, 204, 204));
        back.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        back.setText("Cerrar Sesion");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(back, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(surveys, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(user_roles, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(roles, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(users, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(category_catalog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(response_question, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(questions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(response_options, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subresponse_options, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chapter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(80, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(163, 163, 163))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(227, 227, 227))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roles)
                    .addComponent(chapter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(users)
                    .addComponent(questions))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(category_catalog)
                    .addComponent(response_options))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(surveys)
                    .addComponent(subresponse_options))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(user_roles)
                    .addComponent(response_question))
                .addGap(32, 32, 32)
                .addComponent(back)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void category_catalogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_category_catalogActionPerformed
        CategoryRepository categoryRepository = new CategoryRepository();
        CreateCategoryUseCase createCategoryUseCase = new CreateCategoryUseCase(categoryRepository);
        CategoryController categoryController = new CategoryController(createCategoryUseCase, categoryRepository);
        categoryController.tabla_category();
    }//GEN-LAST:event_category_catalogActionPerformed

    private void chapterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chapterActionPerformed
        ChapterService chapterService = new ChapterRepository(); // Implementación del repositorio
        CreateChapterUseCase createChapterUseCase = new CreateChapterUseCase(chapterService);
        ChapterController chapterController = new ChapterController(createChapterUseCase, chapterService);
        chapterController.tabla_Chapter();
    }//GEN-LAST:event_chapterActionPerformed

    private void rolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rolesActionPerformed
        RolesService rolesService = new RolesRepository();
        CreateRolesUseCase createRolesUseCase = new CreateRolesUseCase(rolesService);
        RolesController rolesController = new RolesController(createRolesUseCase, rolesService);
        rolesController.tabla_roles();
    }//GEN-LAST:event_rolesActionPerformed

    private void user_rolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_rolesActionPerformed
        UserRolService userRolService = new UserRolRepository();
        CreateUserRolUseCase createUserRolUseCase = new CreateUserRolUseCase(userRolService);
        UserRolController userRolController = new UserRolController(createUserRolUseCase, null);
        userRolController.tabla_userrol();
    }//GEN-LAST:event_user_rolesActionPerformed

    private void usersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usersActionPerformed
        UserService userService = new UserRepository();
        CreateUserUseCase createUserUseCase = new CreateUserUseCase(userService);
        UserController userController = new UserController(createUserUseCase, userService);
        userController.tabla_user();  
    }//GEN-LAST:event_usersActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // Cerrar la ventana actual
        this.dispose();

        // Muestra Login
        Login login = new Login();
        login.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void surveysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_surveysActionPerformed
        SurveysRepository surveysRepository = new SurveysRepository();
        CreateSurveysUseCase createSurveysUseCase = new CreateSurveysUseCase(surveysRepository);
        SurveysController SurveysController = new SurveysController(createSurveysUseCase, surveysRepository);
        SurveysController.tabla_Surveys();
    }//GEN-LAST:event_surveysActionPerformed

    private void questionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_questionsActionPerformed
        QuestionService questionService = new QuestionRespository();
        CreateQuestionUseCase createQuestionUseCase = new CreateQuestionUseCase(questionService);
        QuestionController questionController = new QuestionController(createQuestionUseCase, questionService);
        questionController.tabla_Question();
    }//GEN-LAST:event_questionsActionPerformed

    private void response_optionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_response_optionsActionPerformed
        ResOptionService resOptionService = new ResOptionRepository(); // Implementación del servicio
        CreateResOptionUseCase createResOptionUseCase = new CreateResOptionUseCase(resOptionService);
        ResOptionController resOptionController = new ResOptionController(createResOptionUseCase, resOptionService);
        resOptionController.tabla_ResOption();
    }//GEN-LAST:event_response_optionsActionPerformed

    private void subresponse_optionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subresponse_optionsActionPerformed
        SubResOpService subResOpService = new SubResOpRepository(); // Asegúrate de que SubResOpRepository implementa SubResOpService
        CreateSubResOpUseCase createSubResOpUseCase = new CreateSubResOpUseCase(subResOpService);
        SubResOpController subResOpController = new SubResOpController(createSubResOpUseCase, subResOpService); 
        subResOpController.tabla_SubResOp();
    }//GEN-LAST:event_subresponse_optionsActionPerformed

    private void response_questionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_response_questionActionPerformed
        RespondeQuestionService respondeQuestionService = new RespondeQuestionRepository();
        CreateRespondeQuestionUseCase createRespondeQuestionUseCase = new CreateRespondeQuestionUseCase(respondeQuestionService);
        RespondeQuestionController respondeQuestionController = new RespondeQuestionController(createRespondeQuestionUseCase, respondeQuestionService);
        respondeQuestionController.tabla_RespondeQuestion();
    }//GEN-LAST:event_response_questionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton category_catalog;
    private javax.swing.JButton chapter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton questions;
    private javax.swing.JButton response_options;
    private javax.swing.JButton response_question;
    private javax.swing.JButton roles;
    private javax.swing.JButton subresponse_options;
    private javax.swing.JButton surveys;
    private javax.swing.JButton user_roles;
    private javax.swing.JButton users;
    // End of variables declaration//GEN-END:variables
}